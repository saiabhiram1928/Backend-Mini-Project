// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VideoStoreManagementApi.Contexts;

#nullable disable

namespace VideoStoreManagementApi.Migrations
{
    [DbContext(typeof(VideoStoreContext))]
    [Migration("20240530180705_updated-OrderModel")]
    partial class updatedOrderModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("VideoStoreManagementApi.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("PrimaryAdress")
                        .HasColumnType("bit");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Zipcode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Area = "Downtown",
                            City = "CityA",
                            CustomerId = 101,
                            PrimaryAdress = true,
                            State = "StateA",
                            Zipcode = 12345
                        },
                        new
                        {
                            Id = 2,
                            Area = "Uptown",
                            City = "CityB",
                            CustomerId = 102,
                            PrimaryAdress = false,
                            State = "StateB",
                            Zipcode = 54321
                        });
                });

            modelBuilder.Entity("VideoStoreManagementApi.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<float>("TotalPrice")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 101,
                            TotalPrice = 19.99f
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 102,
                            TotalPrice = 29.98f
                        });
                });

            modelBuilder.Entity("VideoStoreManagementApi.Models.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int>("VideoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VideoId");

                    b.HasIndex("CartId", "VideoId")
                        .IsUnique();

                    b.ToTable("CartItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CartId = 1,
                            Price = 19.99f,
                            Qty = 1,
                            VideoId = 1
                        },
                        new
                        {
                            Id = 2,
                            CartId = 2,
                            Price = 29.98f,
                            Qty = 2,
                            VideoId = 2
                        });
                });

            modelBuilder.Entity("VideoStoreManagementApi.Models.Customer", b =>
                {
                    b.Property<int>("Uid")
                        .HasColumnType("int");

                    b.Property<string>("MembershipType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Uid");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Uid = 101,
                            MembershipType = "Basic"
                        },
                        new
                        {
                            Uid = 102,
                            MembershipType = "Premium"
                        },
                        new
                        {
                            Uid = 100,
                            MembershipType = "Premium"
                        });
                });

            modelBuilder.Entity("VideoStoreManagementApi.Models.Inventory", b =>
                {
                    b.Property<int>("VideoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("VideoId");

                    b.ToTable("Inventories");

                    b.HasData(
                        new
                        {
                            VideoId = 1,
                            LastUpdate = new DateTime(2024, 5, 29, 23, 37, 5, 15, DateTimeKind.Local).AddTicks(383),
                            Stock = 10
                        },
                        new
                        {
                            VideoId = 2,
                            LastUpdate = new DateTime(2024, 5, 28, 23, 37, 5, 15, DateTimeKind.Local).AddTicks(391),
                            Stock = 5
                        });
                });

            modelBuilder.Entity("VideoStoreManagementApi.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("DeliveryAddressId")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpectedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OrderedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PaymentDone")
                        .HasColumnType("bit");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RealDeliveredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RentalOrPermanent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TotalAmount")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DeliveryAddressId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 101,
                            DeliveryAddressId = 1,
                            DeliveryStatus = "Delivered",
                            ExpectedDeliveryDate = new DateTime(2024, 6, 4, 23, 37, 5, 15, DateTimeKind.Local).AddTicks(448),
                            OrderedDate = new DateTime(2024, 5, 20, 23, 37, 5, 15, DateTimeKind.Local).AddTicks(447),
                            PaymentDone = true,
                            PaymentType = "COD",
                            RentalOrPermanent = "Rental",
                            TotalAmount = 0f
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 102,
                            DeliveryAddressId = 2,
                            DeliveryStatus = "Delivered",
                            ExpectedDeliveryDate = new DateTime(2024, 6, 9, 23, 37, 5, 15, DateTimeKind.Local).AddTicks(450),
                            OrderedDate = new DateTime(2024, 5, 10, 23, 37, 5, 15, DateTimeKind.Local).AddTicks(450),
                            PaymentDone = false,
                            PaymentType = "COD",
                            RentalOrPermanent = "Permanent",
                            TotalAmount = 0f
                        });
                });

            modelBuilder.Entity("VideoStoreManagementApi.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int>("VideoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("VideoId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderId = 1,
                            Price = 19.99f,
                            Qty = 1,
                            VideoId = 1
                        },
                        new
                        {
                            Id = 2,
                            OrderId = 2,
                            Price = 29.98f,
                            Qty = 2,
                            VideoId = 2
                        });
                });

            modelBuilder.Entity("VideoStoreManagementApi.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PaymentSucess")
                        .HasColumnType("bit");

                    b.Property<int>("TransactionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("TransactionId")
                        .IsUnique();

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("VideoStoreManagementApi.Models.Permanent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<float>("TotalPrice")
                        .HasColumnType("real");

                    b.Property<int>("TotalQty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("Permanents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderId = 2,
                            TotalPrice = 29.98f,
                            TotalQty = 2
                        });
                });

            modelBuilder.Entity("VideoStoreManagementApi.Models.Rental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("LateFee")
                        .HasColumnType("real");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("TotalPrice")
                        .HasColumnType("real");

                    b.Property<int>("TotalQty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("Rentals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DueDate = new DateTime(2024, 5, 31, 23, 37, 5, 15, DateTimeKind.Local).AddTicks(503),
                            LateFee = 0f,
                            OrderId = 1,
                            RentDate = new DateTime(2024, 5, 21, 23, 37, 5, 15, DateTimeKind.Local).AddTicks(503),
                            ReturnDate = new DateTime(2024, 5, 30, 23, 37, 5, 15, DateTimeKind.Local).AddTicks(506),
                            TotalPrice = 19.99f,
                            TotalQty = 1
                        });
                });

            modelBuilder.Entity("VideoStoreManagementApi.Models.User", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Uid"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("Verified")
                        .HasColumnType("bit");

                    b.HasKey("Uid");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Uid = 101,
                            Email = "test1@gmail.com",
                            FirstName = "test1",
                            LastName = "test",
                            Password = new byte[] { 213, 149, 131, 188, 125, 209, 142, 22, 34, 73, 227, 81, 3, 243, 199, 2, 142, 108, 83, 154, 41, 44, 102, 89, 163, 7, 182, 135, 162, 51, 232, 124, 232, 217, 217, 70, 60, 70, 53, 55, 109, 24, 22, 98, 19, 148, 142, 5, 56, 76, 172, 142, 108, 103, 164, 200, 85, 134, 97, 197, 23, 36, 254, 27 },
                            Role = "Customer",
                            Salt = new byte[] { 122, 27, 152, 16, 170, 222, 203, 83, 10, 96, 220, 111, 53, 107, 58, 87, 39, 107, 113, 217, 212, 190, 108, 128, 187, 221, 49, 44, 38, 168, 89, 107, 178, 49, 88, 67, 218, 136, 38, 168, 160, 27, 123, 218, 166, 197, 141, 38, 195, 190, 0, 209, 254, 66, 103, 25, 102, 17, 102, 22, 100, 124, 38, 25, 3, 62, 93, 85, 248, 192, 11, 96, 59, 214, 12, 18, 71, 53, 172, 124, 67, 13, 251, 237, 183, 219, 194, 23, 81, 108, 109, 133, 176, 71, 218, 244, 95, 139, 77, 236, 29, 5, 200, 197, 56, 134, 191, 125, 191, 138, 0, 34, 206, 127, 10, 17, 175, 65, 74, 232, 240, 96, 99, 255, 172, 213, 53, 37 },
                            Verified = true
                        },
                        new
                        {
                            Uid = 102,
                            Email = "test2@gmail.com",
                            FirstName = "test2",
                            LastName = "test",
                            Password = new byte[] { 213, 149, 131, 188, 125, 209, 142, 22, 34, 73, 227, 81, 3, 243, 199, 2, 142, 108, 83, 154, 41, 44, 102, 89, 163, 7, 182, 135, 162, 51, 232, 124, 232, 217, 217, 70, 60, 70, 53, 55, 109, 24, 22, 98, 19, 148, 142, 5, 56, 76, 172, 142, 108, 103, 164, 200, 85, 134, 97, 197, 23, 36, 254, 27 },
                            Role = "Customer",
                            Salt = new byte[] { 122, 27, 152, 16, 170, 222, 203, 83, 10, 96, 220, 111, 53, 107, 58, 87, 39, 107, 113, 217, 212, 190, 108, 128, 187, 221, 49, 44, 38, 168, 89, 107, 178, 49, 88, 67, 218, 136, 38, 168, 160, 27, 123, 218, 166, 197, 141, 38, 195, 190, 0, 209, 254, 66, 103, 25, 102, 17, 102, 22, 100, 124, 38, 25, 3, 62, 93, 85, 248, 192, 11, 96, 59, 214, 12, 18, 71, 53, 172, 124, 67, 13, 251, 237, 183, 219, 194, 23, 81, 108, 109, 133, 176, 71, 218, 244, 95, 139, 77, 236, 29, 5, 200, 197, 56, 134, 191, 125, 191, 138, 0, 34, 206, 127, 10, 17, 175, 65, 74, 232, 240, 96, 99, 255, 172, 213, 53, 37 },
                            Verified = true
                        },
                        new
                        {
                            Uid = 100,
                            Email = "admin@gmail.com",
                            FirstName = "admin",
                            LastName = "admin",
                            Password = new byte[] { 236, 239, 44, 50, 210, 135, 26, 28, 106, 197, 42, 225, 241, 157, 88, 21, 15, 31, 22, 110, 14, 253, 141, 108, 182, 84, 170, 78, 67, 7, 134, 152, 36, 94, 84, 45, 231, 131, 167, 227, 13, 202, 246, 80, 151, 216, 175, 168, 2, 222, 190, 161, 254, 153, 212, 118, 234, 82, 64, 151, 127, 121, 138, 149 },
                            Role = "Admin",
                            Salt = new byte[] { 122, 27, 152, 16, 170, 222, 203, 83, 10, 96, 220, 111, 53, 107, 58, 87, 39, 107, 113, 217, 212, 190, 108, 128, 187, 221, 49, 44, 38, 168, 89, 107, 178, 49, 88, 67, 218, 136, 38, 168, 160, 27, 123, 218, 166, 197, 141, 38, 195, 190, 0, 209, 254, 66, 103, 25, 102, 17, 102, 22, 100, 124, 38, 25, 3, 62, 93, 85, 248, 192, 11, 96, 59, 214, 12, 18, 71, 53, 172, 124, 67, 13, 251, 237, 183, 219, 194, 23, 81, 108, 109, 133, 176, 71, 218, 244, 95, 139, 77, 236, 29, 5, 200, 197, 56, 134, 191, 125, 191, 138, 0, 34, 206, 127, 10, 17, 175, 65, 74, 232, 240, 96, 99, 255, 172, 213, 53, 37 },
                            Verified = true
                        });
                });

            modelBuilder.Entity("VideoStoreManagementApi.Models.Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tittle")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Tittle")
                        .IsUnique();

                    b.ToTable("Videos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "At Mr. Rad's Warehouse, the best hip-hop crews in Los Angeles compete for money and respect.",
                            Director = "Director 1",
                            Genre = "Action",
                            Price = 19.99f,
                            ReleaseDate = new DateTime(2023, 5, 30, 23, 37, 5, 15, DateTimeKind.Local).AddTicks(338),
                            Tittle = "Action Movie"
                        },
                        new
                        {
                            Id = 2,
                            Description = "A basketball player's father must try to convince him to go to a college so he can get a shorter sentence.",
                            Director = "Director 2",
                            Genre = "Comedy",
                            Price = 14.99f,
                            ReleaseDate = new DateTime(2022, 5, 30, 23, 37, 5, 15, DateTimeKind.Local).AddTicks(360),
                            Tittle = "Comedy Movie"
                        });
                });

            modelBuilder.Entity("VideoStoreManagementApi.Models.Address", b =>
                {
                    b.HasOne("VideoStoreManagementApi.Models.Customer", "Customer")
                        .WithMany("Address")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("VideoStoreManagementApi.Models.Cart", b =>
                {
                    b.HasOne("VideoStoreManagementApi.Models.Customer", "Customer")
                        .WithOne()
                        .HasForeignKey("VideoStoreManagementApi.Models.Cart", "CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("VideoStoreManagementApi.Models.CartItem", b =>
                {
                    b.HasOne("VideoStoreManagementApi.Models.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VideoStoreManagementApi.Models.Video", "Video")
                        .WithMany()
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("VideoStoreManagementApi.Models.Customer", b =>
                {
                    b.HasOne("VideoStoreManagementApi.Models.User", "User")
                        .WithOne()
                        .HasForeignKey("VideoStoreManagementApi.Models.Customer", "Uid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("VideoStoreManagementApi.Models.Inventory", b =>
                {
                    b.HasOne("VideoStoreManagementApi.Models.Video", "Video")
                        .WithOne()
                        .HasForeignKey("VideoStoreManagementApi.Models.Inventory", "VideoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Video");
                });

            modelBuilder.Entity("VideoStoreManagementApi.Models.Order", b =>
                {
                    b.HasOne("VideoStoreManagementApi.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VideoStoreManagementApi.Models.Address", "DeliveryAddress")
                        .WithMany()
                        .HasForeignKey("DeliveryAddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("DeliveryAddress");
                });

            modelBuilder.Entity("VideoStoreManagementApi.Models.OrderItem", b =>
                {
                    b.HasOne("VideoStoreManagementApi.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VideoStoreManagementApi.Models.Video", "Video")
                        .WithMany()
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("VideoStoreManagementApi.Models.Payment", b =>
                {
                    b.HasOne("VideoStoreManagementApi.Models.Order", "Order")
                        .WithMany("Payments")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("VideoStoreManagementApi.Models.Permanent", b =>
                {
                    b.HasOne("VideoStoreManagementApi.Models.Order", "Order")
                        .WithOne("Permanent")
                        .HasForeignKey("VideoStoreManagementApi.Models.Permanent", "OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("VideoStoreManagementApi.Models.Rental", b =>
                {
                    b.HasOne("VideoStoreManagementApi.Models.Order", "Order")
                        .WithOne("Rental")
                        .HasForeignKey("VideoStoreManagementApi.Models.Rental", "OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("VideoStoreManagementApi.Models.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("VideoStoreManagementApi.Models.Customer", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("VideoStoreManagementApi.Models.Order", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("Payments");

                    b.Navigation("Permanent")
                        .IsRequired();

                    b.Navigation("Rental")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
